

11. Weiterschreiben!!!
	- Was sind atomare funktionen? 
		- {"Datenstruktur: Baum"}
			[X] die atomaren Funktionen nennen und warum die ausreichen
				- außerdem: linkes kind, rechter bruder
		- {"Darstellung Baum im Programm"}
			[ ] Animationen der atomaren Funktionen
				- außerdem: linkes kind, rechter bruder
	- Baum visualisieren 
		- {"Darstellung Baum im Programm"}
		[ ] Kann man wie an der tafel erklären
		[X] Selbst Grafiken anfertigen
			- nur beta versionen der grafiken, letztendliche in hübsch, kann ich später machen (zb mit lucidchart)
	- Erweiterbarkeit um weitere Datenstruktur
		- {"Implementierung"}
		[X] Generell erklären wie jemand anderes, der das später sieht, da eine weitere datenstruktur hinzufügen kann 
	- Erweiterbarkeit der Bäume für zB Rot Schwarz Baum
		- {"Darstellung Baum im Programm"}
		[ ] Was Bäume angeht gut erweiterbar, da man bei Knoten einfach eine Klasse hinzufügen kann, die von MyNode erbt, um zB zu ermöglichen Knoten zu markieren 
			- Quelle für rot schwarz bäume, in der gesagt wird, dass die knoten markiert werden
	- Änderungen der Architektur
		- {"Erweiterung der Darstellung"}
		[ ] UML Diagramm im Vergleich zu zuvor erstellen um zu sehen, wo in der Architektur ich was geändert habe
	- Erstellte "Algorithmen"
		- {"Darstellung Baum im Programm"}
		[X] Algorithmen für Zeichnen der Bäume zu Testzwecken kurz erwähnen


12. Bäume implementieren und Zeichnen ermöglichen
	- Restliche atomare Operationen implementieren
		- Elternpointer umhängen können
		- Blatt löschen
		- Wert eines Knotens ändern
	- mit get zugriff auf die knoten animieren (siehe 13.)
	- back command (sollte genau so schwer sein wie "Blatt löschen" oder "Baum löschen")
	- repeat visualization und change visualization fixen
    Weiteres:
		- MyNode "value" von int zu allgemeinen Typ machen, damit auch zB Strings abgespeichert werden können
		- Wurzel darf nicht rightBrother haben
		- beim visualisieren bewegt sich der scheiß automatisch nach rechts bzw links
			- immer wieder richtig rücken?
			- liegst am scaling?
		- repeat visualization führt zu fehlern


13. Animieren...
    - ... wie man auf die Sachen zugreift (get animationen, die automatisch in gewissen Operationen passieren)
    - ... interagieren zwischen zwei Instanzen von Datenstrukturen
        - Beispiel: Ein Element wird von einem Array in ein freies Feld eines anderen Arrays geschoben
	- generell Animationen für die Operationen
		- man braucht nach dem draw befehl die Koordinaten von zuvor
			- deepCopy vom Baum erstellen um die Positionen der Knoten zu haben und das nutzt man als Referenz für die Animationen???
		- Schwierigkeit: Kanten
			- verschwindet, dann werden Knoten bewegt und taucht an der richtigen Stelle wieder auf



21. Animationen
	- deleteExperiment klappt nicht (wahrscheinlich auch deleteElement nicht), da die Sachen zuerst gelöscht werden, bevor die Animationen durchlaufen können
		- Lösungsvorschlag:
			Idee 1: das tatsächliche Löschen als atEnd Event (oder wie auch immer) der Animation aufrufen
			Idee 2: irgendwie ein Event bauen, das beim Ende der Animation aktiviert wird und dabei das Element löscht
				- Problem bei beiden: könnte leicht bei zu schnellen Eingaben zu Fehlern kommen. Vielleicht kann ich es wirklich rein visuell halten?
	- animation für "get" funktionen erstellen



31. Config
	- richtige Config statt Java Klasse nutzen
		https://stackoverflow.com/questions/16273174/how-to-read-a-configuration-file-in-java
		


41. Work off ToDo's









Wenn-zu-viel-Zeit-TDL:

	11. Refactoring
	- wiederholtes "if visualization != null..." in den visualization klassen (?) zu einer funktion
	
	21. Zoomen
		- Button zum Zurücksetzen des Zooms (erst mit dem "TerminateButton" testen)
	
	22. Dragging
		- Button zum Zurücksetzen der Translation
		
	23. Complete Visualization
		- Button um direkt zum Endergebnis zu springen
		- Button um Pause zu drücken
		- automatisches Skalieren bei complete visualization (bei Bäumen gut zu beobachten)
	
	24. Animationen
		- Animationen schneller oder langsamer zur Laufzeit machen können.

	41. ScrollPane entfernen und stattdessen anderen Knoten, zb normales Pane, welcher aber nur die feste Größe als Fenster anzeigt
		- Lösung: (etwas unschön, da weiterhin ScrollPane)
			<ScrollPane  minWidth="500" fx:id="algVisScrollPane"
						 hmax="0" vmax="0" hbarPolicy="NEVER" vbarPolicy="NEVER">
	
