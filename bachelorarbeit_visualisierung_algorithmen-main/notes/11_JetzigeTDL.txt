

12. Weiterschreiben

	- noch sicher reinbringen
		[X10] "1.2 Vergleich von bestehenden Algorithmen" schreiben


		[_7] "2.1 Vorherige Arbeit" schreiben
		[_8] "2.3 Zusammenfassung" schreiben (und anderen Namen geben?)
		[_6] "5.4 Erweiterbarkeit um Baum-Unterarten" anpassen, da anders verstanden
		
		[_6, X0] ALLE Einleitungstexte schreiben (zwingend, aber nur 1-2 Sätze was davor gemacht wurde und was jetzt gemacht wird)
			- [_1] 2 Architektur
			- [_1] 3 Überarbeitungen am bestehenden Code
			- [_1] 4 Datenstruktur Baum
			- [_1] 5 Umsetzung Baum im Programm
			- [_1] 6 Erweiterung um visuelle Funktionalitäten
			- [_1] 7 Zukünftige Arbeit
		[_18, X0] ALLE Zusammenfassungstexte schreiben (nicht zwingend, nur wenn es sich anbietet)
			- [_3] 2 Architektur
			- [_3] 3 Überarbeitungen am bestehenden Code
			- [_3] 4 Datenstruktur Baum
			- [_3] 5 Umsetzung Baum im Programm
			- [_3] 6 Erweiterung um visuelle Funktionalitäten
			- [_3] 7 Zukünftige Arbeit

		[_41 , X0] Texte überarbeiten (41 Texte)
			- [_1] Abstract
			- 1 Einleitung
				- [_1] Anfang
				- [_1] 1.1 Motivation
				- [_1] 1.2 Vergleich von ähnlichen Programmen
				- [_1] 1.3 Zielsetzung
				- [_1] 1.4 Strukturierung des Inhalts der Arbeit
			- 2 Architektur
				- [_1] 2.1 Vorherige Arbeit
				- [_1] 2.2 Erweiterbarkeit um weitere Datenstruktur (am Beispiel von Bäumen)
				- [_1] 2.3 Zusammenfassung
			- 3 Überarbeitung des bestehenden Codes
				- [_1] Anfang
				- [_1] 3.1 Refaktorierung und Kommentare
				- [_1] 3.2 ArrayList
				- [_1] 3.3 Komplette Darstellung
				- [_1] 3.4 Config Datei
				- [_1] 3.5 Zusammenfassung
			- 4 Datenstruktur Baum
				- [_1] Anfang
				- [_1] 4.1 Terminologie
				- [_1] 4.2 Definition
				- [_1] 4.3 Speicherung von Bäumen
				- [_1] 4.4 Atomare Operationen
				- [_1] 4.5 Anwendung von Bäumen
				- [_1] 4.6 Zusammenfassung
			- 5 Umsetzung Baum im Programm
				- [_1] Anfang
				- [_1] 5.1 Problematik
				- [_1] 5.2 Visualisierungsalgorithmus
				- [_1] 5.3 Implementierung
				- [_1] 5.4 Erweiterbarkeit um Baum-Unterarten
				- [_1] 5.5 Zusammenfassung
			- 6 Erweiterung um visuelle Funktionalitäten
				- [_1] Anfang
				- [_1] 6.1 Neue Struktur der Architektur 
				- [_1] 6.2 Animationen
				- [_1] 6.3 Erweiterbarkeit um weitere Animationen
				- 6.4 Konkrete Animationen
					- [_1] 6.4.1 Animationen in ArrayList
					- [_1] 6.4.2 Animationen in Bäumen
				- [_1] 6.5 Zoomen und Bewegen
				- [_1] 6.6 Zusammenfassung
			- 7 Zukünftige Arbeit
				- [_1] Anfang
				- [_1] 7.1 Bestehende Probleme
				- [_1] 7.2 Ausblick
				- [_1] 7.3 Zusammenfassung
			- 8 Zusammenfassung
				- [_1] Inhalt
		
		[_24 , X0] Sachen aus "noch vielleicht einbringen"
		[_10] um ganzen kleinen ToDos kümmern (die nicht bzgl latex)
		[_10] in latex einbringen (dabei auch um die latex bezogenen ToDos in den Texten kümmern)
		[_0] Leute Korrekturlesen lassen
			- einmal für Rechtschreibung
				- Dinah ?
				- Selina ?
			- einmal für Inhaltliches
				- Mateusz ? Bisschen zu spät i guess, wegen seiner BA
		
	- noch vielleicht reinbringen
		- UML Klassendiagramm:
			[_4] UML Diagramm für Bäume ?
				- zu beachten: man muss auch was dazu schreiben
			[_2] UML Diagramm für "6.? Erweiterbarkeit um weitere Datenstruktur" erstellen?
		- UML Sequenzdiagramm:
			[_4] Sequenzdiagramm für visualisierung mit drawBefehl für Bäume ?
				- wohin? (4.1?)
				- zu beachten: man muss auch was dazu schreiben
			[_2] UML Sequenz Diagramm zu controller.ExecuteAlgorithmController.initialize() (wegen SceneGestures und NodeGestures um zu sehen, wann diese mit reinspielen) erstellen??? Oder zu controller.ExecuteAlgorithmController.updateVisualization()???
		[_2] Screenshots aus Programm (also der ausgeführten Anwendung) einbauen ??
			- Zoomen -> yeah, baby! Einfach einmal klein und einmal groß gezoomt
			- Bewegen -> kann man machen... ähnlich wie bei zoomen... Vorschlag: Bild 1 normal, Bild 2 gezoomt, Bild 3 bewegt... naja muss man nicht
		[_2] "5.? Neue Struktur der Architektur" aufsplitten auf die beiden Sachen davor?
		[_2] Anhang wie?
		[_2] Alle Wörter, die abkürzbar sind, einheitlich abkürzen oder nicht abkürzen: ggf., bspw., z.B., u.a.,...
		[_4] Einleitungssätze auch für (alle) Unterkapitel??
		
	- geschriebenes überarbeiten
	- verlinkungen zu nutzungen der terminologie begriffe
	- überall "ich" mit "wir" und "man" mit passivem ersetzen
	- Bei Websites auch letzter Zugriff angeben
	- Klassen in Text erwähnen mit dieser Schriftart aus der anderen BA
	- ToDo's:
		- Was muss ich beim abgeben beachten?
			- ausgedruckt im studienbüro abgeben?
			- noch irgendwas bzgl dem code tun? Reicht es, dass der in gitlab ist? Muss ich noch explizit drauf verweisen, dass der dort vorliegt?
	- Achtung: Bei "4.? Algorithmus zum Baum visualisieren" wurde der erste Absatz rausgenommen, was ich auch bei Latex nochmal anpassen sollte
		- generell, wenn ich alles (bzw das meiste) geschrieben habe, sollte ich aus den txt Dateien sicherheitshalber nochmal alles neu einsetzen




CHECK! 20. README mit meinem Zeug erweitern
	CHECK! - Bäume hinzufügen
	CHECK! - ArrayList hinzufügen
	CHECK! - bei gitlab hochladen


21. Animationen 
	- Reihenfolge optional ändern
		- zuerst Animation, dann draw
		- beides möglich machen
	- Schwierigkeit: Kanten
		- verschwindet, dann werden Knoten bewegt und taucht an der richtigen Stelle wieder auf
	- Fortschritt:
		- fertig:
			createTree, addLeaf, changeValue, getIndexByValue, getNodeByIndex
		- noch zu erledigen:
			deleteTree, deleteLeaf, changeParent
	- automatisches justieren des Baums (?)
		- lieber reihenfolge von updateView ändern (im onFinished event oder vor befehlen zeichnen)
	- man braucht nach dem draw befehl die Koordinaten von zuvor
		- deepCopy vom Baum erstellen um die Positionen der Knoten zu haben und das nutzt man als Referenz für die Animationen???
	- interagieren zwischen zwei Instanzen von Datenstrukturen
        - Beispiel: Ein Element wird von einem Array in ein freies Feld eines anderen Arrays geschoben
			- Versucht mit Baum und Variable, was aber nicht geklappt hat, da ich nicht die korrekten Koordinaten gefunden habe
	- automatisch ausgeführte get Animationen bei gewissen Befehlen einfügen (?)
	
	
22. Bäume verbessern
    Weiteres:
		- Wurzel darf nicht rightBrother haben
		- beim visualisieren bewegt sich der scheiß automatisch nach rechts bzw links
			- immer wieder richtig rücken?
			- liegts am scaling?
		- skip in getNodeByIndex ist sus
			- Scheinbar nur bei node not found
			- bei mehreren node not found wird nur erster geskippt, scheinbar auch wenn zwischen denen node not found noch andere befehle liegen
			- (fast) nur wenn das programm einmal komplett durchgelaufen ist und dann auf repeat visualization
			- kommt scheinbar auch bei anderen null transitions vor (create variable)
				- kommt scheinbar bei ALLEN befehlen ohne animation vor



CHECK! 31. Config
	- richtige Config statt Java Klasse nutzen
		https://stackoverflow.com/questions/16273174/how-to-read-a-configuration-file-in-java
		


41. Work off ToDo's
















Wenn-zu-viel-Zeit-TDL:

	11. Refactoring
		- wiederholtes "if visualization != null..." in den visualization klassen (?) zu einer funktion

	12. Animationen
		- deleteArrayList klappt nicht (wahrscheinlich auch deleteElement nicht), da die Sachen zuerst gelöscht werden, bevor die Animationen durchlaufen können
			- Lösungsvorschlag:
				Idee 1: das tatsächliche Löschen als atEnd Event (oder wie auch immer) der Animation aufrufen
				Idee 2: irgendwie ein Event bauen, das beim Ende der Animation aktiviert wird und dabei das Element löscht
					- Problem bei beiden: könnte leicht bei zu schnellen Eingaben zu Fehlern kommen. Vielleicht kann ich es wirklich rein visuell halten?
		- animation für "get" funktionen erstellen
	
	21. Zoomen
		- Button zum Zurücksetzen des Zooms (erst mit dem "TerminateButton" testen)
	
	22. Dragging
		- Button zum Zurücksetzen der Translation
		
	23. Complete Visualization
		- Button um direkt zum Endergebnis zu springen
		- Button um Pause zu drücken
		- automatisches Skalieren bei complete visualization (bei Bäumen gut zu beobachten)
	
	24. Animationen
		- Animationen schneller oder langsamer zur Laufzeit machen können.

	41. ScrollPane entfernen und stattdessen anderen Knoten, zb normales Pane, welcher aber nur die feste Größe als Fenster anzeigt
		- Lösung: (etwas unschön, da weiterhin ScrollPane)
			<ScrollPane  minWidth="500" fx:id="algVisScrollPane"
						 hmax="0" vmax="0" hbarPolicy="NEVER" vbarPolicy="NEVER">
	
