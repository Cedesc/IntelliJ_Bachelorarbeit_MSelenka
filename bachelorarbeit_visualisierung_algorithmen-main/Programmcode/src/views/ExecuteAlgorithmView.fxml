<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.ScrollPane?>
<?import javafx.scene.control.TableColumn?>
<?import javafx.scene.control.TableView?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.VBox?>

<?import supportClasses.zooming.ZoomPane?>

<BorderPane fx:id="BorderPane" xmlns="http://javafx.com/javafx/8.0.121" xmlns:fx="http://javafx.com/fxml/1"
            fx:controller="controller.ExecuteAlgorithmController">

    <top>
        <Label fx:id="headerText" />
    </top>

    <center>

        <GridPane alignment="CENTER">

            <VBox spacing="50" alignment="CENTER">

                <HBox spacing="50" alignment="CENTER">

                    <ScrollPane fx:id="scrollPaneCommand">
                        <TableView fx:id="commandListTable" minWidth="350">
                            <columns>
                                <!-- experiment view object for command list of algorithm !-->
                                <TableColumn fx:id="commandListColumn" minWidth="350" sortable="false"
                                             text="Command List"/>
                            </columns>
                        </TableView>
                    </ScrollPane>

                    <!-- ScrollPane only containing the ZoomPane -->
                    <!-- Why ScrollPane instead of a simple normal Pane?
                         The scroll bars are deactivated, so there is no difference at first glance. But if you use
                         a normal Pane and drag the contained (for example) arrays beyond the boundaries of the window,
                         the arrays will still visible. I haven't found a method of the Pane, that would fix this. -->
                    <ScrollPane  minWidth="500" fx:id="algVisScrollPane">
                        <!-- ZoomPane, only containing the vbox for the visualization, just for enable zooming -->
                        <ZoomPane fx:id="algVisZoomPane">
                            <!-- visualization of the algorithm in the vbox -->
                            <VBox fx:id="algVisVBox"/>
                        </ZoomPane>
                    </ScrollPane>

                </HBox>
                <HBox alignment="CENTER" spacing="50">
                    <!-- "step back" button invisible at beginning of the visualization !-->
                    <Button fx:id="stepBackButton" alignment="CENTER" contentDisplay="CENTER" onAction="#stepBackButton"
                            prefWidth="100.0" text="step back" visible="false"/>
                    <!-- "step forward" button !-->
                    <Button fx:id="stepForwardButton" alignment="CENTER" contentDisplay="CENTER"
                            onAction="#stepForwardButton" prefWidth="100.0" text="step forward"/>
                </HBox>

                <HBox alignment="CENTER" spacing="50">
                    <!-- "repeat visualization" button !-->
                    <Button fx:id="repeatButton" alignment="CENTER" contentDisplay="CENTER" onAction="#repeatButton"
                            text="repeat visualization"/>
                    <!-- "change visualization" button !-->
                    <Button fx:id="changeVisualizationButton" alignment="CENTER" contentDisplay="CENTER"
                            onAction="#changeVisualizationButton" text="change visualization" />
                </HBox>

            </VBox>

        </GridPane>

    </center>

    <bottom>

        <HBox>

            <padding><Insets bottom="20" left="20" right="20" top="20" /></padding>
            <!-- "change algorithm" button bottom left corner !-->
            <HBox alignment="BOTTOM_LEFT" HBox.hgrow="ALWAYS">
                <Button fx:id="changeAlgorithm" onAction="#changeAlgorithmButton" text="change Algorithm"
                        GridPane.columnIndex="0" />
            </HBox>

            <!-- "terminate" button in bottom right corner !-->
            <HBox alignment="BOTTOM_RIGHT" HBox.hgrow="ALWAYS">
                <Button fx:id="terminateButton" onAction="#terminateButton" prefWidth="100.0" text="Terminate"
                        GridPane.columnIndex="2" />
            </HBox>

        </HBox>

    </bottom>


</BorderPane>
